#include<sstream>
#include<iostream>
#include<SFML/Graphics.hpp>

using namespace std;

#define DELETE_KEY 8
#define ENTER_KEY 13
#define ESCAPE_KEY 27

class Textbox {
public:
	Textbox() { }

	Textbox(int size, sf::Color color , bool Sel) 
	{
		textbox.setCharacterSize(size);
		textbox.setColor(color);
		isSelected = Sel;
	}

	void setFont(sf::Font& font) 
	{
		textbox.setFont(font);
	}

	void setPosition(sf::Vector2f pos) 
	{
		textbox.setPosition(pos);
	}

	void setLimit(bool Tof) 
	{
		hasLimit = Tof;
	}
	
	void setLimit(bool Tof, int lim) 
	{
		hasLimit = Tof;
		limit = lim;
	}

	void setSelected(bool sel) 
	{
		isSelected = sel;
		if (!sel) 
		{

		}
	}
private:
	sf::Text textbox;
	std::ostringstream text;
	bool isSelected = false;
	bool hasLimit = false;
	int limit;

	void inputLogic(int charTyped)
	{
		if (charTyped != DELETE_KEY && charTyped != ENTER_KEY && charTyped != ESCAPE_KEY) 
		{
			text << static_cast<char>(charTyped);
		}
		else if (charTyped == DELETE_KEY) {
			if (text.str().length() > 0) 
			{
				deleteLastChar();
			}
		}
		textbox.setString(text.str() + "_");
	}

	void deleteLastChar()
	{
		string t = text.str();
		string newT = "";
		for (int i = 0; i < t.length() - 1; i++) 
		{
			newT += t[i];
		}
		text.str("");
		text << newT;

		textbox.setString(text.str());
	}

};
